import { useState, useRef, useEffect } from "react";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";

// Debug: Site-wide Layout in light mode only, with dropdowns closing on menu clicks, clickable „Çµ„Éº„Éì„Çπ‰∏ÄË¶ß and ÊàêÂäü‰∫ã‰æã.
export default function Layout({ children, extraContact = null }) {
  const [dropdownOpen, setDropdownOpen] = useState(false);
  const [caseDropdownOpen, setCaseDropdownOpen] = useState(false);
  const timeoutRef = useRef(null);
  const caseTimeoutRef = useRef(null);
  const router = useRouter();

  const handleMouseEnter = () => {
    if (timeoutRef.current) clearTimeout(timeoutRef.current);
    setDropdownOpen(true);
  };

  const handleMouseLeave = () => {
    timeoutRef.current = setTimeout(() => setDropdownOpen(false), 50);
  };

  const handleCaseMouseEnter = () => {
    if (caseTimeoutRef.current) clearTimeout(caseTimeoutRef.current);
    setCaseDropdownOpen(true);
  };

  const handleCaseMouseLeave = () => {
    caseTimeoutRef.current = setTimeout(() => setCaseDropdownOpen(false), 50);
  };

  const handleDropdownClick = () => {
    setDropdownOpen(false);
  };

  const handleCaseDropdownClick = () => {
    setCaseDropdownOpen(false);
  };

  const isActive = (href) => router.pathname === href || (href === "/services" && router.pathname.startsWith("/services/"));

  // Service data for breadcrumbs (matching the dropdown in the menu)
  const services = {
    "ec-fulfillment": "EC„Éª„Éï„É´„Éï„Ç£„É´„É°„É≥„Éà",
    assembly: "„Ç¢„Çª„É≥„Éñ„É™„Éª„Çª„ÉÉ„Éà‰ΩúÊ•≠",
    secretariat: "‰∫ãÂãôÂ±Ä‰ª£Ë°å",
    inventory: "Âú®Â∫´ÁÆ°ÁêÜ„ÉªÂèóÁô∫Ê≥®Ê•≠Âãô",
    "data-processing": "„Éá„Éº„ÇøÂá¶ÁêÜ„Éª„Ç™„Éº„Éê„Éº„Éó„É™„É≥„Éà",
  };

  // Close dropdowns when navigating to list pages
  const handleMenuClick = (path, isService) => {
    if (isService) {
      setDropdownOpen(false);
    } else {
      setCaseDropdownOpen(false);
    }
    router.push(path);
  };

  return (
    <div className="flex flex-col min-h-screen bg-gray-100 text-gray-900">
      <header className="bg-white shadow py-4 px-8">
        <div className="flex flex-col items-start justify-between max-w-7xl mx-auto">
          <div className="mb-4 flex items-center justify-between w-full">
            <div className="w-[200px]"> {/* Fixed width container for logo */}
              <Image 
                src="/logo.jpg" 
                alt="„ÉÄ„Ç§„Ç™„Éº„Éü„Ç¶„É©BPO„Éì„Ç∏„Éç„Çπ„Çª„É≥„Çø„Éº„ÅÆÂÖ¨Âºè„É≠„Ç¥" 
                width={200} 
                height={200} 
              />
            </div>
            <h1 className="text-3xl font-extrabold tracking-wide text-gray-800 ml-4 animate-pulse text-yellow-300 hover:text-yellow-400 transition-colors duration-500 flex-1 text-center">
              BPO„Éì„Ç∏„Éç„Çπ„Çª„É≥„Çø„Éº
            </h1>
            <div className="w-[200px]"></div> {/* Spacer div to balance the logo */}
          </div>
          <div className="flex items-end justify-between w-full"> {/* Menu and buttons on same line */}
            <nav role="navigation">
              <ul className="flex gap-6 items-end"> {/* Aligned with buttons bottom */}
                {/* Main menu items */}
                <li>
                  <Link
                    href="/"
                    className={`hover:underline px-4 py-2 block ${isActive("/") ? "underline text-blue-600" : ""}`}
                  >
                    ÁßÅ„Åü„Å°„Å´„Å§„ÅÑ„Å¶
                  </Link>
                </li>
                <li className="relative group" onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>
                  <Link
                    href="/services"
                    onClick={(e) => {
                      e.preventDefault();
                      handleMenuClick("/services", true);
                    }}
                    className={`hover:underline px-4 py-2 block cursor-pointer ${isActive("/services") ? "underline text-blue-600" : ""}`}
                  >
                    „Çµ„Éº„Éì„Çπ‰∏ÄË¶ß
                  </Link>
                  {/* Restored Dropdown Menu (exact match to your provided version) */}
                  <ul 
                    className={`absolute hidden group-hover:block w-64 bg-white shadow-lg p-2 rounded z-50 transition-opacity duration-100 ${dropdownOpen ? "opacity-100 visible" : "opacity-0 invisible"}`}
                  >
                    {[
                      { name: "‰∫ãÊ•≠ÂÜÖÂÆπTOP", href: "/services" },
                      { name: "EC„Éª„Éï„É´„Éï„Ç£„É´„É°„É≥„Éà", href: "/services/ec-fulfillment" },
                      { name: "„Ç¢„Çª„É≥„Éñ„É™„Éª„Çª„ÉÉ„Éà‰ΩúÊ•≠", href: "/services/assembly" },
                      { name: "‰∫ãÂãôÂ±Ä‰ª£Ë°å", href: "/services/secretariat" },
                      { name: "Âú®Â∫´ÁÆ°ÁêÜ„ÉªÂèóÁô∫Ê≥®Ê•≠Âãô", href: "/services/inventory" },
                      { name: "„Éá„Éº„ÇøÂá¶ÁêÜ„Éª„Ç™„Éº„Éê„Éº„Éó„É™„É≥„Éà", href: "/services/data-processing" },
                    ].map((service) => (
                      <li key={service.href}>
                        <Link
                          href={service.href}
                          className="block px-4 py-2 hover:bg-gray-200 whitespace-nowrap"
                          onClick={handleDropdownClick}
                        >
                          {service.name}
                        </Link>
                      </li>
                    ))}
                  </ul>
                </li>
                <li className="relative group" onMouseEnter={handleCaseMouseEnter} onMouseLeave={handleCaseMouseLeave}>
                  <Link
                    href="/cases"
                    onClick={(e) => {
                      e.preventDefault();
                      handleMenuClick("/cases", false);
                    }}
                    className={`hover:underline px-4 py-2 block cursor-pointer ${isActive("/cases") || router.pathname.startsWith("/cases/") ? "underline text-blue-600" : ""}`}
                  >
                    ÊàêÂäü‰∫ã‰æã
                  </Link>
                  {/* Restored Dropdown Menu for ÊàêÂäü‰∫ã‰æã (exact match to your provided version) */}
                  <ul 
                    className={`absolute hidden group-hover:block w-64 bg-white shadow-lg p-2 rounded z-50 transition-opacity duration-100 ${caseDropdownOpen ? "opacity-100 visible" : "opacity-0 invisible"}`}
                  >
                    {[
                      { name: "ÊàêÂäü‰∫ã‰æãTOP", href: "/cases" },
                      { name: "EC‰∫ãÊ•≠„ÅÆÂäπÁéáÂåñ", href: "/cases/ec-efficiency" },
                      { name: "Ë£ΩÈÄ†„Éó„É≠„Çª„Çπ„ÅÆÊúÄÈÅ©Âåñ", href: "/cases/manufacturing-optimization" },
                      { name: "‰∫ãÂãô‰ΩúÊ•≠„ÅÆËá™ÂãïÂåñ", href: "/cases/office-automation" },
                      { name: "Âú®Â∫´ÁÆ°ÁêÜ„ÅÆÊîπÂñÑ", href: "/cases/inventory-improvement" },
                      { name: "„Éá„Éº„ÇøÂá¶ÁêÜ„ÅÆÈ´òÈÄüÂåñ", href: "/cases/data-processing-speedup" },
                    ].map((caseStudy) => (
                      <li key={caseStudy.href}>
                        <Link
                          href={caseStudy.href}
                          className="block px-4 py-2 hover:bg-gray-200 whitespace-nowrap"
                          onClick={handleCaseDropdownClick}
                        >
                          {caseStudy.name}
                        </Link>
                      </li>
                    ))}
                  </ul>
                </li>
                <li>
                  <Link
                    href="/columns"
                    className={`hover:underline px-4 py-2 block ${isActive("/columns") || router.pathname.startsWith("/columns/") ? "underline text-blue-600" : ""}`}
                  >
                    „Ç≥„É©„É†
                  </Link>
                </li>
                <li>
                  <Link
                    href="/faq"
                    className={`hover:underline px-4 py-2 block ${isActive("/faq") ? "underline text-blue-600" : ""}`}
                  >
                    FAQ
                  </Link>
                </li>
                <li>
                  <Link
                    href="/documents"
                    className={`hover:underline px-4 py-2 block ${isActive("/documents") ? "underline text-blue-600" : ""}`}
                  >
                    Ë≥áÊñôË´ãÊ±Ç
                  </Link>
                </li>
              </ul>
            </nav>
            <div className="flex items-end gap-2"> {/* Buttons on same line as menu, different colors with icons, uniform size */}
              <Link
                href="/quote"
                className="w-32 px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 flex items-center justify-center gap-2 whitespace-nowrap overflow-hidden text-ellipsis transition-transform transform hover:scale-105 hover:shadow-lg"
              >
                <span>üßÆ</span> ÁÑ°ÊñôË¶ãÁ©ç
              </Link>
              <Link
                href="/contact"
                className="w-32 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 flex items-center justify-center gap-2 whitespace-nowrap overflow-hidden text-ellipsis transition-transform transform hover:scale-105 hover:shadow-lg"
              >
                <span>üìû</span> „ÅäÂïè„ÅÑÂêà„Çè„Åõ
              </Link>
            </div>
          </div>
        </div>
      </header>

      {/* Breadcrumb (Optional, simple version, can refine or remove later) */}
      <nav className="bg-gray-200 py-2 px-8 text-sm text-gray-600">
        <div className="max-w-7xl mx-auto">
          {router.pathname === "/" && "Top"}
          {router.pathname === "/services" && "Top - ÁßÅ„Åü„Å°„Å´„Å§„ÅÑ„Å¶ - „Çµ„Éº„Éì„Çπ‰∏ÄË¶ß"}
          {router.pathname.startsWith("/services/") && router.pathname !== "/services" && 
            `Top - ÁßÅ„Åü„Å°„Å´„Å§„ÅÑ„Å¶ - „Çµ„Éº„Éì„Çπ‰∏ÄË¶ß - ${services[router.pathname.split("/").pop()] || "Ë©≥Á¥∞"}`}
          {router.pathname === "/cases" && "Top - ÁßÅ„Åü„Å°„Å´„Å§„ÅÑ„Å¶ - ÊàêÂäü‰∫ã‰æã"}
          {router.pathname.startsWith("/cases/") && "Top - ÁßÅ„Åü„Å°„Å´„Å§„ÅÑ„Å¶ - ÊàêÂäü‰∫ã‰æã - " + (caseStudies[router.pathname.split("/").pop()]?.title || "Ë©≥Á¥∞")}
          {router.pathname === "/columns" && "Top - ÁßÅ„Åü„Å°„Å´„Å§„ÅÑ„Å¶ - „Ç≥„É©„É†"}
          {router.pathname.startsWith("/columns/") && "Top - ÁßÅ„Åü„Å°„Å´„Å§„ÅÑ„Å¶ - „Ç≥„É©„É† - " + (articles[router.pathname.split("/").pop()]?.title || "Ë©≥Á¥∞")}
          {router.pathname === "/documents" && "Top - ÁßÅ„Åü„Å°„Å´„Å§„ÅÑ„Å¶ - Ë≥áÊñôË´ãÊ±Ç"}
          {router.pathname === "/quote" && "Top - ÁßÅ„Åü„Å°„Å´„Å§„ÅÑ„Å¶ - ÁÑ°ÊñôË¶ãÁ©ç"}
          {router.pathname === "/contact" && "Top - ÁßÅ„Åü„Å°„Å´„Å§„ÅÑ„Å¶ - „ÅäÂïè„ÅÑÂêà„Çè„Åõ"}
          {router.pathname === "/environmental" && "Top - ÁßÅ„Åü„Å°„Å´„Å§„ÅÑ„Å¶ - Áí∞Â¢É„Å∏„ÅÆÂèñ„ÇäÁµÑ„Åø"}
          {router.pathname === "/sitemap" && "Top - ÁßÅ„Åü„Å°„Å´„Å§„ÅÑ„Å¶ - „Çµ„Ç§„Éà„Éû„ÉÉ„Éó"}
          {router.pathname === "/terms" && "Top - ÁßÅ„Åü„Å°„Å´„Å§„ÅÑ„Å¶ - „Çµ„Ç§„Éà„ÅîÂà©Áî®‰∏ä„ÅÆÊ≥®ÊÑè"}
          {router.pathname === "/privacy" && "Top - ÁßÅ„Åü„Å°„Å´„Å§„ÅÑ„Å¶ - „Éó„É©„Ç§„Éê„Ç∑„Éº„Éù„É™„Ç∑„Éº"}
        </div>
      </nav>

      <main className="flex-grow">{children}</main>

      {extraContact && extraContact}

      <footer className="bg-white shadow py-6 px-8 mt-auto">
        <div className="max-w-7xl mx-auto flex flex-col sm:flex-row justify-between items-center">
          <p className="text-sm">
            ¬© {new Date().getFullYear()} „ÉÄ„Ç§„Ç™„Éº„Éü„Ç¶„É©Ê†™Âºè‰ºöÁ§æ. All Rights Reserved.
          </p>
          <div className="flex gap-4 mt-4 sm:mt-0">
            <Link href="/environmental" className="text-sm text-gray-600 hover:underline">Áí∞Â¢É„Å∏„ÅÆÂèñ„ÇäÁµÑ„Åø</Link>
            <Link href="/sitemap" className="text-sm text-gray-600 hover:underline">„Çµ„Ç§„Éà„Éû„ÉÉ„Éó</Link>
            <Link href="/terms" className="text-sm text-gray-600 hover:underline">„Çµ„Ç§„Éà„ÅîÂà©Áî®‰∏ä„ÅÆÊ≥®ÊÑè</Link>
            <Link href="/privacy" className="text-sm text-gray-600 hover:underline">„Éó„É©„Ç§„Éê„Ç∑„Éº„Éù„É™„Ç∑„Éº</Link>
          </div>
        </div>
      </footer>
    </div>
  );
}

// Placeholder data for breadcrumbs (to be expanded with real content)
const caseStudies = {
  "ec-efficiency": { title: "EC‰∫ãÊ•≠„ÅÆÂäπÁéáÂåñ" },
  "manufacturing-optimization": { title: "Ë£ΩÈÄ†„Éó„É≠„Çª„Çπ„ÅÆÊúÄÈÅ©Âåñ" },
  "office-automation": { title: "‰∫ãÂãô‰ΩúÊ•≠„ÅÆËá™ÂãïÂåñ" },
  "inventory-improvement": { title: "Âú®Â∫´ÁÆ°ÁêÜ„ÅÆÊîπÂñÑ" },
  "data-processing-speedup": { title: "„Éá„Éº„ÇøÂá¶ÁêÜ„ÅÆÈ´òÈÄüÂåñ" },
};

const articles = {
  article1: { title: "BPO„ÅÆÊúÄÊñ∞„Éà„É¨„É≥„Éâ2025" },
  article2: { title: "ECÊ•≠Âãô„ÅÆÂäπÁéáÂåñTips" },
  article3: { title: "„Éá„Éº„ÇøÂá¶ÁêÜ„ÅÆ„Éô„Çπ„Éà„Éó„É©„ÇØ„ÉÜ„Ç£„Çπ" },
  article4: { title: "Âú®Â∫´ÁÆ°ÁêÜ„ÅÆË™≤È°å„Å®Ëß£Ê±∫Á≠ñ" },
  article5: { title: "‰∫ãÂãô‰ΩúÊ•≠„ÅÆËá™ÂãïÂåñ‰∫ã‰æã" },
};